.. contents::




解析 url 的算法
================

一个链接大概就长这样：
``scheme://login.password@address:port/path/to/resource?query_string#fragment``

解析链接的算法：

1. 查找 ``:`` ，获取 ``scheme`` 。

    没找到的话，可能是有链接问题，也可能这个链接是个相对路径。

2. 查找 ``//`` 。

    找到了，直接丢掉。
    没找到，链接有问题。

3. 查找 ``/`` ``?`` ``#`` ，提取地址。

    1. 查找 ``@`` ，获取用户名和密码。
    2. 查找 ``:`` ，获取端口。

4. 提取路径。

    如果之前找到了 ``/`` ，那么查找 ``?`` 或 ``#`` 或 ``EOS`` ，
    中间的就是路径。

5. 提取查询字符串。

    如果之前找到了 ``?`` ，那么查找 ``#`` 或 ``EOS`` ，
    中间的就是查询字符串。

6. 提取片段标识符。

    如果之前找到了 ``#`` ，那么查找 ``EOS`` ，
    中间的就是片段标识符。

上面这个是解析链接的大体流程。
实际上，有些浏览器会接受一些特殊字符，链接本身也还有其他字符限制。
要写出更完全的解析程序，要多查些资料。




链接的字符限制
=================

::

    : / ? # [ ] @
    ! $ & ' ( ) * + , ; =

上面这些符号都是有特殊含义的。

确实需要使用这些符号的时候，可以进行 url 转义，也就是 ``%HH`` 。

==========
 语法分析
==========

语法分析器的类型
=================

自底向上
    从叶节点开始，向根节点方向构造。

自顶向下
    从根节点开始，向叶节点方向构造。


手工实现的语法分析器通常使用 LL 文法。
处理 LR 文法的语法分析器通常是由自动化工具构造的。


自顶向下方法不能处理含有左递归的文法。

-------------------------------------------------------------------------------

上下文无关文法
===============

定义
-----

上下文无关文法由 ``终结符号`` ， ``非终结符号`` ，
``一个开始符号`` ， ``一组产生式`` 组成。

+ 终结符号：串的基本符号。
+ 非终结符号：串的语法变量。
+ 开始符号：一个非终结符号。
+ 产生式：将终结符号和非终结符号组成串的方法。
    产生式分为
    + 左部：非终结符号，产生式名。
    + 连接符号： ``->`` 或 ``::=`` 。
    + 右部：描述了左部的构造方法，又终结符号和非终结符号组成。


推导
-----

推导即将一个非终结符号替换为它的一个产生式。
每次推导要做两件事情：

+ 决定要替换哪个非终结符号。
+ 决定使用哪个产生式来替换。

最左/右推导：总是选择替换最左/右边的非终结符号。

最右推导又称为规范推导（canonical derivation）。


语法分析树
-----------

语法分析树是推导的树形表示。

推导与分析树之间存在多对一的关系
推导可以有不同的替换顺序，而分析树的表示则忽略了顺序。

对最左/右推导而言，其替换顺序是固定的，所以能与语法分析树一一关联。
即最左/右推导对应唯一的语法分析树。


二义性
-------

如果一个文法在处理某个句子时，可以生产不同的语法分析树，
那么这个文法存在二义性（ambiguous）。

